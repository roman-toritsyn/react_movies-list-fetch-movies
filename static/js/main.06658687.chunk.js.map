{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","classNames","hidden","undefined","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","apiURL","FindMovie","addMovie","useState","movieTitle","setMovieTitle","setMovie","error","seterror","onSubmit","event","preventDefault","find","el","current","type","id","placeholder","value","onChange","target","name","onClick","title","fetch","then","response","ok","Error","status","statusText","json","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06658687.chunk.js","sourcesContent":["// import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className={classNames('card', { hidden: movie === null || undefined })}>\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie?.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie?.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie?.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie?.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const serverKey = '936c02dd';\nconst apiURL = `https://www.omdbapi.com/?apikey=${serverKey}&t=`;\n\nexport function getFilm(title: string) {\n  return fetch(`${apiURL}${title}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getFilm } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: React.Dispatch<React.SetStateAction<Movie[]>>;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, addMovie }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movie, setMovie] = useState<Movie>(null);\n  const [error, seterror] = useState(false);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (!movies.find(el => el?.imdbID === movie?.imdbID)) {\n            addMovie(current => [...current, movie]);\n          }\n\n          setMovie(null);\n        }}\n      >\n        <div className=\"field\">\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={movieTitle}\n              onChange={(event) => {\n                setMovieTitle(event.target.value);\n                seterror(false);\n              }}\n            />\n          </div>\n\n          <p\n            className={classNames('help is-danger', { hidden: error === false })}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              name=\"find-movie\"\n              id=\"find-movie\"\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={(event) => {\n                event.preventDefault();\n                getFilm(movieTitle)\n                  .then((response) => {\n                    if (!response.Error) {\n                      setMovie(response);\n                      seterror(false);\n                    } else {\n                      seterror(true);\n                      setMovie(null);\n                    }\n                  });\n\n                setMovieTitle('');\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie !== null && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC<{}> = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}